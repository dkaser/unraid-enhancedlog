Menu="SystemInformation"
Type="xmenu"
Title="System Log"
Icon="enhanced.log.png"
---
<?PHP
/* Copyright 2015, Lime Technology
 * Copyright 2015, Bergware International.
 * Copyright 2015, Dan Landon
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 */
?>

<?
$zip = str_replace(' ','_',strtolower($var['NAME']))."-syslog-".date('Ymd-Hi').".zip";

/* Array of strings and highlight colors - "search string", "background color", "font color". */
$search = array_map('str_getcsv', file('/usr/local/emhttp/plugins/enhanced.log/syslog.conf'));

/* Assign colors from configuration file. */
$enhanced_log_cfg = parse_ini_file( "/boot/config/plugins/enhanced.log/enhanced.log.cfg" );

echo "<pre class='up'>";
echo "<font size='3'>";
if ($enhanced_log_cfg['ERRORS'] == "yes") {
	$errors_color = $enhanced_log_cfg['ERRORS_CLR'];
   	echo "<font style='background-color:$errors_color'> Errors </font>&nbsp;"; /* red */
} else {
	$errors_color = "";
}

if ($enhanced_log_cfg['MINOR_ISSUES'] == "yes") {
	$minor_issues_color = $enhanced_log_cfg['MINOR_ISSUES_CLR'];
	echo "<font style='background-color:$minor_issues_color'> Minor Issues </font>&nbsp;"; /* orange */
} else {
	$minor_issues_color = "";
}

if ($enhanced_log_cfg['LIME_TECH'] == "yes") {
	$lime_tech_color = $enhanced_log_cfg['LIME_TECH_CLR'];
	echo "<font style='background-color:$lime_tech_color'> Lime Tech </font>&nbsp;"; /* lime */
} else {
	$lime_tech_color = "";
}

if ($enhanced_log_cfg['ARRAY'] == "yes") {
	$array_color = $enhanced_log_cfg['ARRAY_CLR'];
	echo "<font style='background-color:$array_color'> Array </font>&nbsp;"; /* green */
} else {
	$array_color = "";
}

if ($enhanced_log_cfg['SYSTEM'] == "yes") {
	$system_color = $enhanced_log_cfg['SYSTEM_CLR'];
	echo "<font style='background-color:$system_color'> System </font>&nbsp;"; /* blue */
} else {
	$system_color = "";
}

if ($enhanced_log_cfg['FILE_SYSTEM'] == "yes") {
	$file_system_color = $enhanced_log_cfg['FILE_SYSTEM_CLR'];
	echo "<font style='background-color:$file_system_color'> File System </font>&nbsp;"; /* gray */
} else {
	$file_system_color = "";
}

if ($enhanced_log_cfg['DEVICES'] == "yes") {
	$devices_color = $enhanced_log_cfg['DEVICES_CLR'];
	echo "<font style='background-color:$devices_color'> Devices </font>&nbsp;"; /* teal */
} else {
	$devices_color = "";
}

if ($enhanced_log_cfg['NETWORK'] == "yes") {
	$network_color = $enhanced_log_cfg['NETWORK_CLR'];
	echo "<font style='background-color:$network_color'> Network </font>&nbsp;"; /* purple */
} else {
	$network_color = "";
}

if ($enhanced_log_cfg['LOGIN'] == "yes") {
	$login_color = $enhanced_log_cfg['LOGIN_CLR'];
	echo "<font style='background-color:$login_color'> Login </font>&nbsp;"; /* olive */
} else {
	$login_color = "";
}

if ($enhanced_log_cfg['EMHTTP'] == "yes") {
	$emhttp_color = $enhanced_log_cfg['EMHTTP_CLR'];
	echo "<font style='background-color:$emhttp_color'> emhttp </font>&nbsp;"; /* navy */
} else {
	$emhttp_color = "";
}

/* Adjust array colors. */
$i = 0;
foreach ($search as $s) {
	switch ($s[1]) {
		case ($s[1] == "error"):
			$search[$i][1] = $errors_color;
			break;
		case ($s[1] == "minor issue"):
			$search[$i][1] = $minor_issues_color;
			break;
		case ($s[1] == "lime tech"):
			$search[$i][1] = $lime_tech_color;
			break;
		case ($s[1] == "array"):
			$search[$i][1] = $array_color;
			break;
		case ($s[1] == "system"):
			$search[$i][1] = $system_color;
			break;
		case ($s[1] == "file system"):
			$search[$i][1] = $file_system_color;
			break;
		case ($s[1] == "devices"):
			$search[$i][1] = $devices_color;
			break;
		case ($s[1] == "network"):
			$search[$i][1] = $network_color;
			break;
		case ($s[1] == "login"):
			$search[$i][1] = $login_color;
			break;
		case ($s[1] == "emhttp"):
			$search[$i][1] = $emhttp_color;
			break;
		default:
			break;			
	}
	$i++;
}

echo "</font><br/><br/>";

echo "<div style='height:650px;width:1245px;border:2px solid #ccc;overflow:auto;'>";
foreach (file('/var/log/syslog') as $line) {
	$found_it = false;
	$i = 0;
	foreach ($search as $s) {
		if (($s[1] !== "") && (preg_match("/$s[0]/i", $line))) {
			$found_it = true;
			break;
		}
		$i++;
	}

	if (($found_it) && ($s[1] !== "skip")) {
		echo "<font style='background-color:".$search[$i][1]."';>$line</font>";
	} else {
		echo $line;
	}
}
echo "</div>";
echo "</pre>";

?>
<script>
function cleanUp() {
  if (document.hasFocus()) {
    $('input[value="Downloading..."]').val('Download').prop('disabled',false);
    $.post('/webGui/include/Download.php',{cmd:'delete',file:'<?=$zip?>'});
  } else {
    setTimeout(cleanUp,4000);
  }
}  
function getlog() {
  $('input[value="Download"]').val('Downloading...').prop('disabled',true);
  $.post('/webGui/include/Download.php',{cmd:'save',source:'/var/log/syslog',file:'<?=$zip?>'},function(zip) {
    location = zip;
    setTimeout(cleanUp,4000);
  });
}
$('.tabs').append("<span class='status vhshift'><input type='button' value='Download' onclick='getlog()'></span>");
</script>
<input type="button" value="Download" onclick="getlog()"><input type="button" value="Done" onclick="done()">
